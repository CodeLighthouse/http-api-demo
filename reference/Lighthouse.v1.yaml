openapi: 3.0.0
info:
  title: CodeLighthouse HTTP API
  version: '1.0'
  contact:
    url: 'https://codelighthouse.io/contact'
    email: hello@codelighthouse.io
  termsOfService: 'https://codelighthouse.io/terms'
  license:
    name: MIT
  description: The HTTP API for CodeLighthouse.  Use this to extend one of our SDKs or create your own using the same powerful tools that we do.
servers:
  - url: 'https://codelighthouse.io'
    description: Prod
paths:
  /v1/error:
    post:
      summary: Error Handler
      tags:
        - Error
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error_guid:
                    type: string
                    format: uuid
                    description: The guid of the error that was created
                required:
                  - message
                  - error_guid
              examples:
                Example:
                  value:
                    error_guid: 8cab25e1-e841-4dc1-89f4-7dc2de355904
                    message: Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                  user_name:
                    type: string
                    description: The name of the user that was passed
                  function:
                    type: string
                    description: The name of the function where the error occurred
                required:
                  - message
              examples:
                User Does Not Exist:
                  value:
                    message: User or User Link does not exist.
                User is Deactivated:
                  value:
                    message: 'Error captured by hello@codelighthouse.io, but they are deactivated.  Please reactivate them in the CodeLighthouse admin panel or reassign this function to a new user'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Invalid API Key/Organization Name:
                  value:
                    message: Please supply a valid API Key and Organization Name
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
          headers: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Subscription Inactive:
                  value:
                    message: Your subscription is not currently active.  Please resubscribe to continue service
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Monthly Error Limit Hit:
                  value:
                    message: Your organization has already reached the maximum for errors this month.  Please contact support at hello@codelighthouse.io
      operationId: post-v1-error
      parameters:
        - schema:
            type: string
            example: CodeLighthouse
          in: header
          required: true
          description: Your organization name
          name: organization
        - schema:
            type: string
          in: header
          description: Your API Key
          required: true
          name: x-api-key
        - schema:
            type: string
            default: CodeLighthouse
          in: header
          description: Your User Agent (Some common errors will return HTML unless this is set to `CodeLighthouse`)
          name: User-Agent
        - schema:
            type: string
            default: application/json
          in: header
          name: Content-Type
          description: 'Lets the application know you''re sending it json.  Normally this isn''t needed, but if it''s omitted and if the JSON that''s passed to the application is improperly formatted, then it may cause issues in the returns.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: ''
              additionalProperties: false
              properties:
                error_type:
                  type: string
                  minLength: 1
                  description: |-
                    This is the type of error that occured.

                    examples: KeyError, AssertionError, ArithmeticError
                  example: KeyError
                function:
                  type: string
                  minLength: 1
                  description: The function where the error occurred
                  example: broken_function()
                resource_group:
                  type: string
                  minLength: 1
                  description: The resource group that this code is being hosted on
                  example: AWS Lambda
                resource_name:
                  type: string
                  minLength: 1
                  description: The name of the specific resource this code is being hosted on
                  example: Broken Lambda
                description:
                  type: string
                  minLength: 1
                  description: 'This is the description that occurs with the error, for example "key does not exist" for a key error'
                  example: Tried to access value that doesn't exist
                email:
                  type: string
                  minLength: 1
                  description: The email for the user that you want to be notified in the event of an error
                  format: email
                  example: hello@codelighthouse.io
                arguments:
                  type: object
                  description: This is where you can log the arguments that were passed to the function where the error occured.  This can help with reproducing the error in the future.
                  properties:
                    args:
                      type: array
                      items: {}
                stack_trace:
                  type: array
                  uniqueItems: true
                  minItems: 0
                  description: 'You have the option of sending a stack trace as well.  The variables below this were ones we found helpful, but we allow any JSON to be passed for a stack trace, so you can customize the variables you send.'
                  items:
                    type: object
                    properties:
                      file:
                        type: string
                        minLength: 1
                      line:
                        type: string
                        minLength: 1
                      lineno:
                        type: number
                      function:
                        type: string
                        minLength: 1
              required:
                - email
        description: ''
      description: 'The Error Handler saves the passed information and then, based off of your user preferences, notifies the developer who wrote the code'
  '/v1/error/{error_guid}':
    get:
      summary: Exposed Error
      tags:
        - Error
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - data_dump
                      - description
                      - error_type
                      - function
                      - guid
                      - organization_name
                      - resource_group
                      - resource_name
                      - timestamp
                      - user_real_name
                    properties:
                      data_dump:
                        type: object
                        required:
                          - arguments
                          - stack_trace
                        properties:
                          arguments:
                            type: object
                            required:
                              - args
                            properties:
                              args:
                                type: array
                                items:
                                  type: object
                          stack_trace:
                            type: array
                            uniqueItems: true
                            minItems: 1
                            items:
                              type: object
                              properties:
                                file:
                                  type: string
                                  minLength: 1
                                function:
                                  type: string
                                  minLength: 1
                                line:
                                  type: string
                                  minLength: 1
                                lineno:
                                  type: number
                              required:
                                - file
                                - function
                                - line
                                - lineno
                      description:
                        type: string
                        minLength: 1
                      error_type:
                        type: string
                        minLength: 1
                      function:
                        type: string
                        minLength: 1
                      guid:
                        type: string
                        minLength: 1
                      organization_name:
                        type: string
                        minLength: 1
                      resource_group:
                        type: string
                        minLength: 1
                      resource_name:
                        type: string
                        minLength: 1
                      timestamp:
                        type: string
                        minLength: 1
                      user_real_name:
                        type: string
                        minLength: 1
                required:
                  - error
              examples:
                Error:
                  value:
                    error:
                      data_dump:
                        arguments:
                          args: []
                        stack_trace:
                          - file: 'F:/git/CodeLighthouse/sdk-python/example.py'
                            function: <module>
                            line: broken_function()
                            lineno: 18
                      description: '''int'' object has no attribute ''append'''
                      error_type: AttributeError
                      function: broken_function
                      guid: 06ef8ead-7bc8-4c36-ac9c-d9ea9fc620e0
                      organization_name: CodeLighthouse
                      resource_group: AWS EC2s
                      resource_name: application core
                      timestamp: 'Sat, 28 Nov 2020 01:02:34 GMT'
                      user_real_name: John Doe
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                guid not found:
                  value:
                    message: This error does not exist within your organization.
      operationId: get-v1-error-error_guid
      description: Allows you to retrieve an error from the database
      parameters:
        - schema:
            type: string
            example: CodeLighthouse
          in: header
          required: true
          description: Your organization name
          name: organization
        - schema:
            type: string
          in: header
          description: Your API Key
          required: true
          name: x-api-key
        - schema:
            type: string
            default: CodeLighthouse
          in: header
          description: Your User Agent (Some common errors will return HTML unless this is set to `CodeLighthouse`)
          name: User-Agent
    parameters:
      - schema:
          type: string
        name: error_guid
        in: path
        required: true
  /v1/error/list:
    get:
      summary: Exposed Error List
      tags:
        - Error
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  max_page:
                    type: number
                  output:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        data_dump:
                          type: object
                          properties:
                            arguments:
                              type: object
                              properties:
                                args:
                                  type: array
                                  items:
                                    type: string
                                test2:
                                  type: string
                                  minLength: 1
                            stack_trace:
                              type: array
                              uniqueItems: true
                              minItems: 1
                              items:
                                type: object
                                properties:
                                  file:
                                    type: string
                                    minLength: 1
                                  function:
                                    type: string
                                    minLength: 1
                                  line:
                                    type: string
                                    minLength: 1
                                  lineno:
                                    type: number
                                required:
                                  - file
                                  - function
                                  - line
                                  - lineno
                          required:
                            - arguments
                            - stack_trace
                        description:
                          type: string
                          minLength: 1
                        error_type:
                          type: string
                          minLength: 1
                        function:
                          type: string
                          minLength: 1
                        guid:
                          type: string
                          minLength: 1
                        organization_name:
                          type: string
                          minLength: 1
                        resource_name:
                          type: string
                          minLength: 1
                        timestamp:
                          type: string
                          minLength: 1
                        user_real_name:
                          type: string
                          minLength: 1
                      required:
                        - description
                        - error_type
                        - function
                        - guid
                        - organization_name
                        - resource_name
                        - timestamp
                        - user_real_name
                required:
                  - max_page
                  - output
              examples:
                Error List:
                  value:
                    max_page: 4
                    output:
                      - data_dump:
                          arguments:
                            args:
                              - key
                          stack_trace:
                            - file: 'F:/git/CodeLighthouse/sdk-python/example.py'
                              function: broken_function
                              line: 'not_a_dictionary["not_a_key"]'
                              lineno: 18
                        description: 'KeyError: "not_a_key"'
                        error_type: KeyError
                        function: broken_function
                        guid: 75f6607f-7dee-42e6-ba7f-00ca07e00087
                        organization_name: CodeLighthouse
                        resource_name: application core
                        timestamp: 'Sat, 12 Dec 2020 21:13:28 GMT'
                        user_real_name: John Doe
                      - data_dump:
                          arguments:
                            args:
                              - test_arg
                            test2: test_arg_2
                          stack_trace:
                            - file: 'F:/git/CodeLighthouse/sdk-python/example.py'
                              function: <module>
                              line: 'broken_function("test_arg", test2="test_arg_2")'
                              lineno: 18
                        description: name 'not_a_dictionary' is not defined
                        error_type: NameError
                        function: <module>
                        guid: 8071ff95-2882-4733-bacd-fa305229fb9a
                        organization_name: CodeLighthouse
                        resource_name: application core
                        timestamp: 'Sat, 12 Dec 2020 21:13:14 GMT'
                        user_real_name: John Doe
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                Page Length Too Small:
                  value:
                    message: Page cannot be less than 1
                Limit too High:
                  value:
                    message: limit cannot be greater than 1000
      operationId: get-v1-error-list
      description: Retrieves a list of errors from the database
      parameters:
        - schema:
            type: string
            example: CodeLighthouse
          in: header
          required: true
          description: Your organization name
          name: organization
        - schema:
            type: string
          in: header
          description: Your API Key
          required: true
          name: x-api-key
        - schema:
            type: string
            default: CodeLighthouse
          in: header
          description: Your User Agent (Some common errors will return HTML unless this is set to `CodeLighthouse`)
          name: User-Agent
        - schema:
            type: integer
            default: 100
            minimum: 0
            maximum: 1000
          in: query
          name: limit
          description: The maximum number of errors that can be returned
        - schema:
            type: integer
            default: '1'
            minimum: 1
          in: query
          name: page
          description: the number of the page you want to return
        - schema:
            type: integer
            default: '5'
            minimum: 1
          in: query
          name: page-length
          description: The length of each page that you want to return
components:
  schemas: {}
  securitySchemes: {}
